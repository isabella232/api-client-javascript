/**
 * LaunchDarkly REST API
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@launchdarkly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Link', 'model/Links', 'model/PatchDelta', 'model/Webhook', 'model/WebhookPost', 'model/Webhooks', 'api/RootApi', 'api/WebhooksApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Link'), require('./model/Links'), require('./model/PatchDelta'), require('./model/Webhook'), require('./model/WebhookPost'), require('./model/Webhooks'), require('./api/RootApi'), require('./api/WebhooksApi'));
  }
}(function(ApiClient, Link, Links, PatchDelta, Webhook, WebhookPost, Webhooks, RootApi, WebhooksApi) {
  'use strict';

  /**
   * Build_custom_integrations_with_the_LaunchDarkly_REST_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var LaunchDarklyRestApi = require('index'); // See note below*.
   * var xxxSvc = new LaunchDarklyRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new LaunchDarklyRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new LaunchDarklyRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new LaunchDarklyRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link: Link,
    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links: Links,
    /**
     * The PatchDelta model constructor.
     * @property {module:model/PatchDelta}
     */
    PatchDelta: PatchDelta,
    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook: Webhook,
    /**
     * The WebhookPost model constructor.
     * @property {module:model/WebhookPost}
     */
    WebhookPost: WebhookPost,
    /**
     * The Webhooks model constructor.
     * @property {module:model/Webhooks}
     */
    Webhooks: Webhooks,
    /**
     * The RootApi service constructor.
     * @property {module:api/RootApi}
     */
    RootApi: RootApi,
    /**
     * The WebhooksApi service constructor.
     * @property {module:api/WebhooksApi}
     */
    WebhooksApi: WebhooksApi
  };

  return exports;
}));
