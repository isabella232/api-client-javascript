/**
 * LaunchDarkly REST API
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 2.0.12
 * Contact: support@launchdarkly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Action', 'model/Actions', 'model/AuditLogEntries', 'model/AuditLogEntry', 'model/AuditLogEntryTarget', 'model/Clause', 'model/CustomProperty', 'model/CustomPropertyValues', 'model/CustomRole', 'model/CustomRoleBody', 'model/CustomRoleKeyOrId', 'model/CustomRoles', 'model/Environment', 'model/EnvironmentPost', 'model/Fallthrough', 'model/FeatureFlag', 'model/FeatureFlagBody', 'model/FeatureFlagConfig', 'model/FeatureFlagStatus', 'model/FeatureFlagStatuses', 'model/FeatureFlags', 'model/Id', 'model/Link', 'model/Links', 'model/Member', 'model/Members', 'model/MembersBody', 'model/PatchComment', 'model/PatchOperation', 'model/Policy', 'model/Prerequisite', 'model/Project', 'model/ProjectBody', 'model/Projects', 'model/Resource', 'model/Resources', 'model/Role', 'model/Rollout', 'model/Rule', 'model/Statement', 'model/Statements', 'model/Target', 'model/User', 'model/UserFlagSetting', 'model/UserFlagSettings', 'model/UserRecord', 'model/UserSegment', 'model/UserSegmentBody', 'model/UserSegmentRule', 'model/UserSegments', 'model/UserSettingsBody', 'model/Users', 'model/Variation', 'model/Webhook', 'model/WebhookBody', 'model/Webhooks', 'model/WeightedVariation', 'api/AuditLogApi', 'api/CustomRolesApi', 'api/EnvironmentsApi', 'api/FeatureFlagsApi', 'api/ProjectsApi', 'api/RootApi', 'api/TeamMembersApi', 'api/UserSegmentsApi', 'api/UserSettingsApi', 'api/UsersApi', 'api/WebhooksApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Action'), require('./model/Actions'), require('./model/AuditLogEntries'), require('./model/AuditLogEntry'), require('./model/AuditLogEntryTarget'), require('./model/Clause'), require('./model/CustomProperty'), require('./model/CustomPropertyValues'), require('./model/CustomRole'), require('./model/CustomRoleBody'), require('./model/CustomRoleKeyOrId'), require('./model/CustomRoles'), require('./model/Environment'), require('./model/EnvironmentPost'), require('./model/Fallthrough'), require('./model/FeatureFlag'), require('./model/FeatureFlagBody'), require('./model/FeatureFlagConfig'), require('./model/FeatureFlagStatus'), require('./model/FeatureFlagStatuses'), require('./model/FeatureFlags'), require('./model/Id'), require('./model/Link'), require('./model/Links'), require('./model/Member'), require('./model/Members'), require('./model/MembersBody'), require('./model/PatchComment'), require('./model/PatchOperation'), require('./model/Policy'), require('./model/Prerequisite'), require('./model/Project'), require('./model/ProjectBody'), require('./model/Projects'), require('./model/Resource'), require('./model/Resources'), require('./model/Role'), require('./model/Rollout'), require('./model/Rule'), require('./model/Statement'), require('./model/Statements'), require('./model/Target'), require('./model/User'), require('./model/UserFlagSetting'), require('./model/UserFlagSettings'), require('./model/UserRecord'), require('./model/UserSegment'), require('./model/UserSegmentBody'), require('./model/UserSegmentRule'), require('./model/UserSegments'), require('./model/UserSettingsBody'), require('./model/Users'), require('./model/Variation'), require('./model/Webhook'), require('./model/WebhookBody'), require('./model/Webhooks'), require('./model/WeightedVariation'), require('./api/AuditLogApi'), require('./api/CustomRolesApi'), require('./api/EnvironmentsApi'), require('./api/FeatureFlagsApi'), require('./api/ProjectsApi'), require('./api/RootApi'), require('./api/TeamMembersApi'), require('./api/UserSegmentsApi'), require('./api/UserSettingsApi'), require('./api/UsersApi'), require('./api/WebhooksApi'));
  }
}(function(ApiClient, Action, Actions, AuditLogEntries, AuditLogEntry, AuditLogEntryTarget, Clause, CustomProperty, CustomPropertyValues, CustomRole, CustomRoleBody, CustomRoleKeyOrId, CustomRoles, Environment, EnvironmentPost, Fallthrough, FeatureFlag, FeatureFlagBody, FeatureFlagConfig, FeatureFlagStatus, FeatureFlagStatuses, FeatureFlags, Id, Link, Links, Member, Members, MembersBody, PatchComment, PatchOperation, Policy, Prerequisite, Project, ProjectBody, Projects, Resource, Resources, Role, Rollout, Rule, Statement, Statements, Target, User, UserFlagSetting, UserFlagSettings, UserRecord, UserSegment, UserSegmentBody, UserSegmentRule, UserSegments, UserSettingsBody, Users, Variation, Webhook, WebhookBody, Webhooks, WeightedVariation, AuditLogApi, CustomRolesApi, EnvironmentsApi, FeatureFlagsApi, ProjectsApi, RootApi, TeamMembersApi, UserSegmentsApi, UserSettingsApi, UsersApi, WebhooksApi) {
  'use strict';

  /**
   * Build_custom_integrations_with_the_LaunchDarkly_REST_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var LaunchDarklyApi = require('index'); // See note below*.
   * var xxxSvc = new LaunchDarklyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new LaunchDarklyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new LaunchDarklyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new LaunchDarklyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.12
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action: Action,
    /**
     * The Actions model constructor.
     * @property {module:model/Actions}
     */
    Actions: Actions,
    /**
     * The AuditLogEntries model constructor.
     * @property {module:model/AuditLogEntries}
     */
    AuditLogEntries: AuditLogEntries,
    /**
     * The AuditLogEntry model constructor.
     * @property {module:model/AuditLogEntry}
     */
    AuditLogEntry: AuditLogEntry,
    /**
     * The AuditLogEntryTarget model constructor.
     * @property {module:model/AuditLogEntryTarget}
     */
    AuditLogEntryTarget: AuditLogEntryTarget,
    /**
     * The Clause model constructor.
     * @property {module:model/Clause}
     */
    Clause: Clause,
    /**
     * The CustomProperty model constructor.
     * @property {module:model/CustomProperty}
     */
    CustomProperty: CustomProperty,
    /**
     * The CustomPropertyValues model constructor.
     * @property {module:model/CustomPropertyValues}
     */
    CustomPropertyValues: CustomPropertyValues,
    /**
     * The CustomRole model constructor.
     * @property {module:model/CustomRole}
     */
    CustomRole: CustomRole,
    /**
     * The CustomRoleBody model constructor.
     * @property {module:model/CustomRoleBody}
     */
    CustomRoleBody: CustomRoleBody,
    /**
     * The CustomRoleKeyOrId model constructor.
     * @property {module:model/CustomRoleKeyOrId}
     */
    CustomRoleKeyOrId: CustomRoleKeyOrId,
    /**
     * The CustomRoles model constructor.
     * @property {module:model/CustomRoles}
     */
    CustomRoles: CustomRoles,
    /**
     * The Environment model constructor.
     * @property {module:model/Environment}
     */
    Environment: Environment,
    /**
     * The EnvironmentPost model constructor.
     * @property {module:model/EnvironmentPost}
     */
    EnvironmentPost: EnvironmentPost,
    /**
     * The Fallthrough model constructor.
     * @property {module:model/Fallthrough}
     */
    Fallthrough: Fallthrough,
    /**
     * The FeatureFlag model constructor.
     * @property {module:model/FeatureFlag}
     */
    FeatureFlag: FeatureFlag,
    /**
     * The FeatureFlagBody model constructor.
     * @property {module:model/FeatureFlagBody}
     */
    FeatureFlagBody: FeatureFlagBody,
    /**
     * The FeatureFlagConfig model constructor.
     * @property {module:model/FeatureFlagConfig}
     */
    FeatureFlagConfig: FeatureFlagConfig,
    /**
     * The FeatureFlagStatus model constructor.
     * @property {module:model/FeatureFlagStatus}
     */
    FeatureFlagStatus: FeatureFlagStatus,
    /**
     * The FeatureFlagStatuses model constructor.
     * @property {module:model/FeatureFlagStatuses}
     */
    FeatureFlagStatuses: FeatureFlagStatuses,
    /**
     * The FeatureFlags model constructor.
     * @property {module:model/FeatureFlags}
     */
    FeatureFlags: FeatureFlags,
    /**
     * The Id model constructor.
     * @property {module:model/Id}
     */
    Id: Id,
    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link: Link,
    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links: Links,
    /**
     * The Member model constructor.
     * @property {module:model/Member}
     */
    Member: Member,
    /**
     * The Members model constructor.
     * @property {module:model/Members}
     */
    Members: Members,
    /**
     * The MembersBody model constructor.
     * @property {module:model/MembersBody}
     */
    MembersBody: MembersBody,
    /**
     * The PatchComment model constructor.
     * @property {module:model/PatchComment}
     */
    PatchComment: PatchComment,
    /**
     * The PatchOperation model constructor.
     * @property {module:model/PatchOperation}
     */
    PatchOperation: PatchOperation,
    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy: Policy,
    /**
     * The Prerequisite model constructor.
     * @property {module:model/Prerequisite}
     */
    Prerequisite: Prerequisite,
    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project: Project,
    /**
     * The ProjectBody model constructor.
     * @property {module:model/ProjectBody}
     */
    ProjectBody: ProjectBody,
    /**
     * The Projects model constructor.
     * @property {module:model/Projects}
     */
    Projects: Projects,
    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource: Resource,
    /**
     * The Resources model constructor.
     * @property {module:model/Resources}
     */
    Resources: Resources,
    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role: Role,
    /**
     * The Rollout model constructor.
     * @property {module:model/Rollout}
     */
    Rollout: Rollout,
    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule: Rule,
    /**
     * The Statement model constructor.
     * @property {module:model/Statement}
     */
    Statement: Statement,
    /**
     * The Statements model constructor.
     * @property {module:model/Statements}
     */
    Statements: Statements,
    /**
     * The Target model constructor.
     * @property {module:model/Target}
     */
    Target: Target,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserFlagSetting model constructor.
     * @property {module:model/UserFlagSetting}
     */
    UserFlagSetting: UserFlagSetting,
    /**
     * The UserFlagSettings model constructor.
     * @property {module:model/UserFlagSettings}
     */
    UserFlagSettings: UserFlagSettings,
    /**
     * The UserRecord model constructor.
     * @property {module:model/UserRecord}
     */
    UserRecord: UserRecord,
    /**
     * The UserSegment model constructor.
     * @property {module:model/UserSegment}
     */
    UserSegment: UserSegment,
    /**
     * The UserSegmentBody model constructor.
     * @property {module:model/UserSegmentBody}
     */
    UserSegmentBody: UserSegmentBody,
    /**
     * The UserSegmentRule model constructor.
     * @property {module:model/UserSegmentRule}
     */
    UserSegmentRule: UserSegmentRule,
    /**
     * The UserSegments model constructor.
     * @property {module:model/UserSegments}
     */
    UserSegments: UserSegments,
    /**
     * The UserSettingsBody model constructor.
     * @property {module:model/UserSettingsBody}
     */
    UserSettingsBody: UserSettingsBody,
    /**
     * The Users model constructor.
     * @property {module:model/Users}
     */
    Users: Users,
    /**
     * The Variation model constructor.
     * @property {module:model/Variation}
     */
    Variation: Variation,
    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook: Webhook,
    /**
     * The WebhookBody model constructor.
     * @property {module:model/WebhookBody}
     */
    WebhookBody: WebhookBody,
    /**
     * The Webhooks model constructor.
     * @property {module:model/Webhooks}
     */
    Webhooks: Webhooks,
    /**
     * The WeightedVariation model constructor.
     * @property {module:model/WeightedVariation}
     */
    WeightedVariation: WeightedVariation,
    /**
     * The AuditLogApi service constructor.
     * @property {module:api/AuditLogApi}
     */
    AuditLogApi: AuditLogApi,
    /**
     * The CustomRolesApi service constructor.
     * @property {module:api/CustomRolesApi}
     */
    CustomRolesApi: CustomRolesApi,
    /**
     * The EnvironmentsApi service constructor.
     * @property {module:api/EnvironmentsApi}
     */
    EnvironmentsApi: EnvironmentsApi,
    /**
     * The FeatureFlagsApi service constructor.
     * @property {module:api/FeatureFlagsApi}
     */
    FeatureFlagsApi: FeatureFlagsApi,
    /**
     * The ProjectsApi service constructor.
     * @property {module:api/ProjectsApi}
     */
    ProjectsApi: ProjectsApi,
    /**
     * The RootApi service constructor.
     * @property {module:api/RootApi}
     */
    RootApi: RootApi,
    /**
     * The TeamMembersApi service constructor.
     * @property {module:api/TeamMembersApi}
     */
    TeamMembersApi: TeamMembersApi,
    /**
     * The UserSegmentsApi service constructor.
     * @property {module:api/UserSegmentsApi}
     */
    UserSegmentsApi: UserSegmentsApi,
    /**
     * The UserSettingsApi service constructor.
     * @property {module:api/UserSettingsApi}
     */
    UserSettingsApi: UserSettingsApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi,
    /**
     * The WebhooksApi service constructor.
     * @property {module:api/WebhooksApi}
     */
    WebhooksApi: WebhooksApi
  };

  return exports;
}));
